* Blockchain
	// 1-2
	- Block hashing algorithm: https://en.bitcoin.it/wiki/Block_hashing_algorithm
	- Proof of work: https://en.bitcoin.it/wiki/Proof_of_work
	- Hashcash: https://en.bitcoin.it/wiki/Hashcash
	// 3 = Persistence: serialization, database, iterator
	- Bitcoin Core Data Storage: https://en.bitcoin.it/wiki/Bitcoin_Core_0.11_(ch_2):_Data_Storage
	- boltdb: https://github.com/boltdb/bolt
	- encoding/gob
	// 4
	- Transaction: https://en.bitcoin.it/wiki/Transaction
	- Merkle tree: https://en.bitcoin.it/wiki/Protocol_documentation#Merkle_Trees
	- Coinbase: https://en.bitcoin.it/wiki/Coinbase
	* Script: https://en.bitcoin.it/wiki/Script
	// 5
	- Public-key Cryptography: https://en.wikipedia.org/wiki/Public-key_cryptography
	- Digital Signatures: https://en.wikipedia.org/wiki/Digital_signature
	- Elliptic Curve Cryptography:
		- https://en.wikipedia.org/wiki/Elliptic_curve/
		- https://en.wikipedia.org/wiki/Elliptic_curve_cryptography
		- https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm
		- http://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/
	- Bitcoin Addesses:
		- https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses
		- https://en.bitcoin.it/wiki/Address
	- Base58: https://en.bitcoin.it/wiki/Base58Check_encoding
	- Trimmed Transaction copy: https://en.bitcoin.it/wiki/File:Bitcoin_OpCheckSig_InDetail.png
	- Sign/Verify Transaction
	// 6
	- UTXO Set: https://en.bitcoin.it/wiki/Bitcoin_Core_0.11_(ch_2):_Data_Storage#The_UTXO_set_.28chainstate_leveldb.29
	- Merkle tree: https://en.bitcoin.it/wiki/Protocol_documentation#Merkle_Trees
	- Original Bitcoin paper: https://bitcoin.org/bitcoin.pdf
	- Smart Contracts and Bitcoin: https://medium.com/@maraoz/smart-contracts-and-bitcoin-a5d61011d9b1
	- SPV security: https://medium.com/@jonaldfyookball/why-every-bitcoin-user-should-understand-spv-security-520d1d45e0b9
	// 7
	- Block: Height
	- Blockchain: NodeID, blockchain_nodeID.db, AddBlock/GetBlock, GetBlockHashes/GetBestHeight
	- Transaction: dataToSign/dataToVerify, DeserializeTransaction
	- Wallets: NodeID, wallet_nodeID.dat

* Network
	// 7
	- NODE_ID, NodeID
	- Blockchain network - P2P network prototype: https://en.bitcoin.it/wiki/Network
	- Node Roles: Miner node, Full node, SPV
	- Network simplification: Central node, Miner node, Wallet node
	- DNS seed: https://bitcoin.org/en/glossary/dns-seed
	- The Scenario
	- commands: commandToBytes -> sendData, bytesToCommand -> extractCommand
	- Bitcoin protocol: https://en.bitcoin.it/wiki/Protocol_documentation
	- handleConnection, 7 commands:
		- version,
		- getblocks,
		- inv (inventory),
		- getdata (block, transaction),
		- block
		- tx
		- addr

* App
	// 3
	- flag
	- printchain
	- addblock
	// 4
	- createblockchain
	- getbalance
	- send
	// 5
	- createwallet
	- listaddresses
	// 6
	- reindexutxo
	// 7
	- startnode, NODE_ID
	- send option -mine

* Math/Crypto
	- Block hashing algorithm: https://en.bitcoin.it/wiki/Block_hashing_algorithm
	- Proof of work: https://en.bitcoin.it/wiki/Proof_of_work
	- Hashcash: https://en.bitcoin.it/wiki/Hashcash
	- Transaction: https://en.bitcoin.it/wiki/Transaction
	- Merkle tree: https://en.bitcoin.it/wiki/Protocol_documentation#Merkle_Trees
	- Public-key Cryptography: https://en.wikipedia.org/wiki/Public-key_cryptography
	- Digital Signatures: https://en.wikipedia.org/wiki/Digital_signature
	- Elliptic Curve Cryptography:
		- https://en.wikipedia.org/wiki/Elliptic_curve/
		- https://en.wikipedia.org/wiki/Elliptic_curve_cryptography
		- https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm
		- http://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/
	- Bitcoin Addesses:
		- https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses
		- https://en.bitcoin.it/wiki/Address
	- Base58: https://en.bitcoin.it/wiki/Base58Check_encoding
	- Sign/Verify Transaction
	- UTXO Set: https://en.bitcoin.it/wiki/Bitcoin_Core_0.11_(ch_2):_Data_Storage#The_UTXO_set_.28chainstate_leveldb.29
	- Merkle tree: https://en.bitcoin.it/wiki/Protocol_documentation#Merkle_Trees
